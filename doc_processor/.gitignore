# This `.gitignore` file is a crucial configuration file for the Git version control system.
# Its purpose is to explicitly tell Git which files and directories it should intentionally untrack and not include in commits.
# This is essential for maintaining a clean, secure, and efficient repository by excluding files that are machine-specific, sensitive, or automatically generated.

# --- Python Virtual Environment ---
# The `venv/` directory is the standard location for a Python virtual environment.
# This folder contains a local copy of the Python interpreter and all the packages installed via `pip` for this specific project.
# It is excluded because:
# 1.  It can be very large and would unnecessarily bloat the repository.
# 2.  It is specific to the operating system and Python version of the developer who created it.
# The correct way to manage dependencies is by committing the `requirements.txt` file, which allows other developers to recreate the virtual environment on their own machines.
venv/

# --- Environment Variables File ---
# The `.env` file is used by the `python-dotenv` library to store environment-specific configuration.
# This is where sensitive data like API keys, database passwords, and local file paths are stored.
# **This file must ALWAYS be ignored** to prevent leaking credentials and private information into the public or shared repository history.
# A `.env.sample` or similar template file is often committed instead to show other developers what variables are needed.
.env

# --- Python Cache and Compiled Files ---
# `__pycache__/`: This directory is automatically created by Python to store `.pyc` files.
# `*.pyc`: These are compiled bytecode files. Python generates them from `.py` source files to speed up subsequent executions.
# These files are intermediate artifacts that are not needed for the source code and will be regenerated by the Python interpreter as needed.
# Committing them would lead to unnecessary merge conflicts and clutter.
__pycache__/
*.pyc

# --- Database Files ---
# `documents.db` and `*.db`: These patterns exclude SQLite database files.
# The database *schema* (the table structure) is defined in code (e.g., `database_setup.py`) and should be version controlled.
# However, the *data* inside the database is specific to a local development instance. It changes constantly during testing and can grow very large.
# Committing the database file itself would be like committing a log fileâ€”it's transient data, not source code.
documents.db
*.db

# --- IDE and Editor Configuration ---
# `.vscode/` and `.idea/`: These directories are created by popular code editors (Visual Studio Code and JetBrains IDEs like PyCharm, respectively).
# They store user-specific settings, workspace configurations, debugger setups, and other local preferences.
# These are excluded because they are not relevant to the project code itself and can vary widely between developers.
# Sharing these can create conflicts and override personal editor preferences.
.vscode/
.idea/
